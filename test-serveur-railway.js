const axios = require('axios');
const config = require('./config');

async function testServeurRailway() {
    console.log('üîç === TEST CONNEXION SERVEUR RAILWAY ===\n');

    const serverUrl = config.LICENSE_SERVER_URL;

    console.log('üåê URL test√©e:', serverUrl);
    console.log('üìã Configuration actuelle:', config.APP_NAME, 'v' + config.APP_VERSION);
    console.log('‚è≥ Test de connexion...\n');

    let testsReussis = 0;
    let testsTotal = 0;
    
    try {
        // Test 1: Endpoint de sant√©
        console.log('1Ô∏è‚É£ Test endpoint /health...');
        testsTotal++;
        try {
            const healthResponse = await axios.get(`${serverUrl}/health`, {
                timeout: config.REQUEST_TIMEOUT,
                headers: {
                    'User-Agent': `${config.APP_NAME}-Test/${config.APP_VERSION}`
                }
            });
            console.log('‚úÖ /health - Status:', healthResponse.status);
            console.log('üìÑ R√©ponse:', JSON.stringify(healthResponse.data, null, 2));
            testsReussis++;
        } catch (error) {
            console.log('‚ùå /health - Erreur:', error.message);
            if (error.response) {
                console.log('üìÑ Status:', error.response.status);
                console.log('üìÑ Data:', JSON.stringify(error.response.data, null, 2));
            }
        }
        
        console.log('\n2Ô∏è‚É£ Test endpoint racine /...');
        testsTotal++;
        try {
            const rootResponse = await axios.get(serverUrl, {
                timeout: config.REQUEST_TIMEOUT,
                headers: {
                    'User-Agent': `${config.APP_NAME}-Test/${config.APP_VERSION}`
                }
            });
            console.log('‚úÖ / - Status:', rootResponse.status);
            console.log('üìÑ R√©ponse:', JSON.stringify(rootResponse.data, null, 2));
            testsReussis++;
        } catch (error) {
            console.log('‚ùå / - Erreur:', error.message);
            if (error.response) {
                console.log('üìÑ Status:', error.response.status);
                console.log('üìÑ Data:', JSON.stringify(error.response.data, null, 2));
            }
        }
        
        console.log('\n3Ô∏è‚É£ Test endpoint /activate...');
        try {
            const activateResponse = await axios.post(`${serverUrl}/activate`, {
                licenseKey: 'TEST-KEY-123',
                machineId: 'test-machine',
                hardwareFingerprint: 'test-fingerprint'
            }, {
                timeout: 10000,
                headers: {
                    'Content-Type': 'application/json',
                    'User-Agent': 'GestionPro-Test/1.0'
                }
            });
            console.log('‚úÖ /activate - Status:', activateResponse.status);
            console.log('üìÑ R√©ponse:', activateResponse.data);
        } catch (error) {
            console.log('‚ùå /activate - Erreur:', error.message);
            if (error.response) {
                console.log('üìÑ Status:', error.response.status);
                console.log('üìÑ Data:', error.response.data);
            }
        }
        
    } catch (error) {
        console.log('‚ùå Erreur g√©n√©rale:', error.message);
    }

    // Rapport final
    console.log('\nüìä === RAPPORT FINAL ===');
    console.log(`‚úÖ Tests r√©ussis: ${testsReussis}/${testsTotal}`);

    if (testsReussis === testsTotal) {
        console.log('üéâ SERVEUR RAILWAY PARFAITEMENT FONCTIONNEL !');
        console.log('‚úÖ Tous les endpoints r√©pondent correctement');
        console.log('‚úÖ Votre application peut utiliser ce serveur');
    } else if (testsReussis > 0) {
        console.log('‚ö†Ô∏è SERVEUR PARTIELLEMENT FONCTIONNEL');
        console.log(`‚úÖ ${testsReussis} test(s) r√©ussi(s)`);
        console.log(`‚ùå ${testsTotal - testsReussis} test(s) √©chou√©(s)`);
    } else {
        console.log('‚ùå SERVEUR NON FONCTIONNEL');
        console.log('üö® Aucun endpoint ne r√©pond correctement');
    }

    console.log('\nüîß SOLUTIONS POSSIBLES:');
    console.log('1. V√©rifiez que votre serveur Railway est d√©ploy√© et actif');
    console.log('2. V√©rifiez l\'URL dans config.js');
    console.log('3. V√©rifiez que les endpoints /health et /activate existent');
    console.log('4. V√©rifiez votre connexion internet');
    console.log('5. V√©rifiez les logs de votre serveur Railway');

    console.log('\nüí° POUR CORRIGER:');
    console.log('- Remplacez l\'URL dans config.js par la vraie URL de votre serveur');
    console.log('- Assurez-vous que votre serveur Railway r√©pond aux endpoints requis');
    console.log('\nüåê URL actuelle configur√©e:', serverUrl);
}

testServeurRailway().catch(console.error);
