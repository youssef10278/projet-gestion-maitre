/**
 * Script pour supprimer les pages Historique et Statistiques
 * de la page retours pour simplifier l'interface
 */

const fs = require('fs');
const path = require('path');

console.log('üóëÔ∏è SUPPRESSION HISTORIQUE ET STATISTIQUES - PAGE RETOURS');
console.log('=' .repeat(60));
console.log('');

const returnsHtmlPath = path.join(__dirname, 'src', 'returns.html');
const returnsJsPath = path.join(__dirname, 'src', 'js', 'returns.js');

if (!fs.existsSync(returnsHtmlPath)) {
    console.log('‚ùå Fichier returns.html non trouv√©');
    process.exit(1);
}

if (!fs.existsSync(returnsJsPath)) {
    console.log('‚ùå Fichier returns.js non trouv√©');
    process.exit(1);
}

let htmlContent = fs.readFileSync(returnsHtmlPath, 'utf8');
let jsContent = fs.readFileSync(returnsJsPath, 'utf8');

const originalHtmlLength = htmlContent.length;
const originalJsLength = jsContent.length;

console.log('üìã Suppression des √©l√©ments HTML...');

// 1. Supprimer les boutons Statistiques et Historique
htmlContent = htmlContent.replace(/<button id="statsBtn"[^>]*>[\s\S]*?<\/button>/g, '');
console.log('‚úÖ Bouton Statistiques supprim√©');

htmlContent = htmlContent.replace(/<button id="historyBtn"[^>]*>[\s\S]*?<\/button>/g, '');
console.log('‚úÖ Bouton Historique supprim√©');

// 2. Supprimer toute la modal d'historique
htmlContent = htmlContent.replace(/<!-- Modal Historique des Retours -->[\s\S]*?<\/div>\s*<\/div>/g, '');
console.log('‚úÖ Modal Historique supprim√©e');

// 3. Supprimer les styles CSS li√©s √† l'historique
htmlContent = htmlContent.replace(/\/\* Styles pour la modal d'historique \*\/[\s\S]*?(?=\/\*|<\/style>)/g, '');
console.log('‚úÖ Styles CSS modal historique supprim√©s');

htmlContent = htmlContent.replace(/\/\* Styles pour le tableau d'historique \*\/[\s\S]*?(?=\/\*|<\/style>)/g, '');
console.log('‚úÖ Styles CSS tableau historique supprim√©s');

// 4. Nettoyer les espaces multiples dans le HTML
htmlContent = htmlContent.replace(/\n\s*\n\s*\n/g, '\n\n');
console.log('‚úÖ Espaces multiples nettoy√©s dans HTML');

console.log('');
console.log('üìã Suppression des √©l√©ments JavaScript...');

// 5. Supprimer les fonctions li√©es √† l'historique
const historyFunctions = [
    'async function showHistoryModal',
    'function setupHistoryModalEvents',
    'function closeHistoryModal',
    'async function loadHistoryData',
    'async function searchHistoryData',
    'function clearHistoryFilters',
    'function showHistoryLoading',
    'function displayHistoryResults',
    'function showHistoryEmpty',
    'function createHistoryRow',
    'async function viewReturnDetails',
    'async function printReturnTicket',
    'function adaptReturnDataForPrint',
    'function showReturnDetailsModal'
];

historyFunctions.forEach(funcName => {
    // Supprimer la fonction compl√®te
    const funcRegex = new RegExp(`${funcName.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')}[^{]*\\{[\\s\\S]*?\\n\\}`, 'g');
    const beforeLength = jsContent.length;
    jsContent = jsContent.replace(funcRegex, '');
    if (jsContent.length < beforeLength) {
        console.log(`‚úÖ Fonction ${funcName} supprim√©e`);
    }
});

// 6. Supprimer les √©v√©nements li√©s aux boutons
jsContent = jsContent.replace(/addEventListenerSafe\('statsBtn'[^;]*;/g, '');
jsContent = jsContent.replace(/addEventListenerSafe\('historyBtn'[^;]*;/g, '');
console.log('‚úÖ √âv√©nements boutons supprim√©s');

// 7. Supprimer les fonctions de test globales
jsContent = jsContent.replace(/window\.testHistorySearch[\s\S]*?};/g, '');
jsContent = jsContent.replace(/window\.forceSetupHistoryEvents[\s\S]*?};/g, '');
console.log('‚úÖ Fonctions de test globales supprim√©es');

// 8. Supprimer les commentaires li√©s √† l'historique
jsContent = jsContent.replace(/\/\*\*[\s\S]*?historique[\s\S]*?\*\//gi, '');
jsContent = jsContent.replace(/\/\/.*historique.*/gi, '');
console.log('‚úÖ Commentaires historique supprim√©s');

// 9. Nettoyer les espaces multiples dans le JS
jsContent = jsContent.replace(/\n\s*\n\s*\n/g, '\n\n');
console.log('‚úÖ Espaces multiples nettoy√©s dans JS');

// 10. Supprimer les r√©f√©rences aux fonctions supprim√©es
jsContent = jsContent.replace(/showStatsModal/g, '() => console.log("Statistiques supprim√©es")');
console.log('‚úÖ R√©f√©rences aux fonctions supprim√©es nettoy√©es');

// Sauvegarder les fichiers modifi√©s
fs.writeFileSync(returnsHtmlPath, htmlContent, 'utf8');
fs.writeFileSync(returnsJsPath, jsContent, 'utf8');

const newHtmlLength = htmlContent.length;
const newJsLength = jsContent.length;

const htmlReduction = originalHtmlLength - newHtmlLength;
const jsReduction = originalJsLength - jsContent.length;
const htmlReductionPercent = Math.round((htmlReduction / originalHtmlLength) * 100);
const jsReductionPercent = Math.round((jsReduction / originalJsLength) * 100);

console.log('');
console.log('=' .repeat(60));
console.log('üìä R√âSULTATS DE LA SUPPRESSION');
console.log('=' .repeat(60));

console.log('üìÑ FICHIER HTML:');
console.log(`   Taille originale: ${originalHtmlLength} caract√®res`);
console.log(`   Nouvelle taille: ${newHtmlLength} caract√®res`);
console.log(`   R√©duction: ${htmlReduction} caract√®res (${htmlReductionPercent}%)`);
console.log('');

console.log('üìÑ FICHIER JAVASCRIPT:');
console.log(`   Taille originale: ${originalJsLength} caract√®res`);
console.log(`   Nouvelle taille: ${newJsLength} caract√®res`);
console.log(`   R√©duction: ${jsReduction} caract√®res (${jsReductionPercent}%)`);
console.log('');

const totalReduction = htmlReduction + jsReduction;
console.log(`üìä R√âDUCTION TOTALE: ${totalReduction} caract√®res`);
console.log('');

console.log('‚úÖ SUPPRESSION R√âUSSIE !');
console.log('');
console.log('üóëÔ∏è √âL√âMENTS SUPPRIM√âS:');
console.log('‚ùå Bouton "Statistiques"');
console.log('‚ùå Bouton "Historique"');
console.log('‚ùå Modal compl√®te d\'historique');
console.log('‚ùå Tous les styles CSS li√©s');
console.log('‚ùå Toutes les fonctions JavaScript li√©es');
console.log('‚ùå Tous les √©v√©nements li√©s');
console.log('‚ùå Fonctions de test et debug');
console.log('');
console.log('‚úÖ √âL√âMENTS PR√âSERV√âS:');
console.log('‚úÖ Toutes les fonctionnalit√©s de retour');
console.log('‚úÖ Navigation entre sections');
console.log('‚úÖ Traitement des retours');
console.log('‚úÖ Interface utilisateur principale');
console.log('‚úÖ Styles et design');
console.log('');
console.log('üéØ R√âSULTAT:');
console.log('La page retours est maintenant simplifi√©e et se concentre');
console.log('uniquement sur la fonctionnalit√© principale de gestion des retours.');
console.log('');
console.log('üí° POUR TESTER:');
console.log('1. Lancer l\'application');
console.log('2. Aller dans "Retours"');
console.log('3. V√©rifier que les boutons Historique et Statistiques ont disparu');
console.log('4. Tester que toutes les autres fonctionnalit√©s marchent');
console.log('');
console.log('Si vous souhaitez restaurer ces fonctionnalit√©s plus tard,');
console.log('vous pouvez utiliser Git pour revenir √† la version pr√©c√©dente.');
