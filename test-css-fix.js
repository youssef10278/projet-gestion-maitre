/**
 * Script de test pour v√©rifier la correction du CSS orphelin
 * dans la page retours
 */

const fs = require('fs');
const path = require('path');

console.log('üîç TEST DE CORRECTION CSS - PAGE RETOURS');
console.log('=' .repeat(50));
console.log('');

const returnsHtmlPath = path.join(__dirname, 'src', 'returns.html');

if (!fs.existsSync(returnsHtmlPath)) {
    console.log('‚ùå Fichier returns.html non trouv√©');
    process.exit(1);
}

const content = fs.readFileSync(returnsHtmlPath, 'utf8');

let testsTotal = 0;
let testsReussis = 0;

function runTest(testName, testFunction) {
    testsTotal++;
    console.log(`üß™ Test: ${testName}`);
    
    try {
        const result = testFunction();
        if (result) {
            console.log(`‚úÖ R√âUSSI: ${testName}\n`);
            testsReussis++;
        } else {
            console.log(`‚ùå √âCHOU√â: ${testName}\n`);
        }
    } catch (error) {
        console.log(`‚ùå ERREUR: ${testName} - ${error.message}\n`);
    }
}

// Test 1: V√©rifier qu'il n'y a qu'une seule balise </style>
runTest('Balise </style> unique', () => {
    const styleCloseTags = content.match(/<\/style>/g);
    if (!styleCloseTags) {
        console.log('  ‚ùå Aucune balise </style> trouv√©e');
        return false;
    }
    
    if (styleCloseTags.length > 1) {
        console.log(`  ‚ùå ${styleCloseTags.length} balises </style> trouv√©es (devrait √™tre 1)`);
        return false;
    }
    
    console.log('  ‚úÖ Une seule balise </style> trouv√©e');
    return true;
});

// Test 2: V√©rifier que le CSS probl√©matique n'est plus orphelin
runTest('CSS Classes utilitaires dans <style>', () => {
    // Chercher le texte probl√©matique qui s'affichait
    const problematicText = 'Classes utilitaires suppl√©mentaires pour le nouveau design';
    
    // V√©rifier qu'il est dans une balise style
    const styleStartIndex = content.indexOf('<style>');
    const styleEndIndex = content.indexOf('</style>');
    
    if (styleStartIndex === -1 || styleEndIndex === -1) {
        console.log('  ‚ùå Balises <style> non trouv√©es');
        return false;
    }
    
    const styleContent = content.substring(styleStartIndex, styleEndIndex);
    
    if (!styleContent.includes(problematicText)) {
        console.log('  ‚ùå CSS "Classes utilitaires" non trouv√© dans <style>');
        return false;
    }
    
    console.log('  ‚úÖ CSS "Classes utilitaires" correctement dans <style>');
    return true;
});

// Test 3: V√©rifier que quantity-input est dans le CSS
runTest('Classe .quantity-input dans <style>', () => {
    const styleStartIndex = content.indexOf('<style>');
    const styleEndIndex = content.indexOf('</style>');
    const styleContent = content.substring(styleStartIndex, styleEndIndex);
    
    if (!styleContent.includes('.quantity-input')) {
        console.log('  ‚ùå Classe .quantity-input non trouv√©e dans <style>');
        return false;
    }
    
    console.log('  ‚úÖ Classe .quantity-input correctement dans <style>');
    return true;
});

// Test 4: V√©rifier qu'il n'y a pas de CSS orphelin apr√®s </style>
runTest('Pas de CSS orphelin apr√®s </style>', () => {
    const styleEndIndex = content.indexOf('</style>');
    const headEndIndex = content.indexOf('</head>');
    
    if (styleEndIndex === -1 || headEndIndex === -1) {
        console.log('  ‚ùå Balises </style> ou </head> non trouv√©es');
        return false;
    }
    
    const afterStyleContent = content.substring(styleEndIndex + 8, headEndIndex);
    
    // V√©rifier qu'il n'y a pas de CSS (s√©lecteurs avec {})
    const cssPattern = /\.[a-zA-Z-]+\s*\{[^}]*\}/;
    
    if (cssPattern.test(afterStyleContent)) {
        console.log('  ‚ùå CSS orphelin d√©tect√© apr√®s </style>');
        return false;
    }
    
    console.log('  ‚úÖ Aucun CSS orphelin apr√®s </style>');
    return true;
});

// Test 5: V√©rifier la structure HTML correcte
runTest('Structure HTML valide', () => {
    // V√©rifier que <style> est dans <head>
    const headStartIndex = content.indexOf('<head>');
    const headEndIndex = content.indexOf('</head>');
    const styleStartIndex = content.indexOf('<style>');
    const styleEndIndex = content.indexOf('</style>');
    
    if (headStartIndex === -1 || headEndIndex === -1) {
        console.log('  ‚ùå Balises <head> non trouv√©es');
        return false;
    }
    
    if (styleStartIndex === -1 || styleEndIndex === -1) {
        console.log('  ‚ùå Balises <style> non trouv√©es');
        return false;
    }
    
    if (styleStartIndex < headStartIndex || styleEndIndex > headEndIndex) {
        console.log('  ‚ùå Balises <style> en dehors de <head>');
        return false;
    }
    
    console.log('  ‚úÖ Structure HTML valide');
    return true;
});

// R√©sultats finaux
console.log('=' .repeat(50));
console.log('üìä R√âSULTATS DU TEST CSS');
console.log('=' .repeat(50));
console.log(`Total des tests: ${testsTotal}`);
console.log(`Tests r√©ussis: ${testsReussis} ‚úÖ`);
console.log(`Tests √©chou√©s: ${testsTotal - testsReussis} ‚ùå`);
console.log(`Taux de r√©ussite: ${Math.round((testsReussis / testsTotal) * 100)}%`);
console.log('');

if (testsReussis === testsTotal) {
    console.log('üéâ CORRECTION CSS PARFAITE !');
    console.log('‚úÖ Le CSS orphelin a √©t√© corrig√©');
    console.log('‚úÖ Plus de texte CSS affich√© en haut de la page');
    console.log('‚úÖ Tous les styles sont correctement encapsul√©s');
    console.log('‚úÖ La page retours s\'affichera maintenant correctement');
    console.log('');
    console.log('üéØ PROBL√àME R√âSOLU:');
    console.log('‚ùå AVANT: CSS affich√© comme texte en haut de la page');
    console.log('‚úÖ APR√àS: CSS correctement interpr√©t√© et appliqu√©');
} else {
    console.log('‚ö†Ô∏è CORRECTION INCOMPL√àTE');
    console.log(`‚ùå ${testsTotal - testsReussis} test(s) ont √©chou√©`);
    console.log('üí° Veuillez v√©rifier les probl√®mes identifi√©s');
}

console.log('');
console.log('üîÑ Pour v√©rifier la correction:');
console.log('1. Ouvrir la page retours dans l\'application');
console.log('2. V√©rifier qu\'aucun texte CSS n\'appara√Æt en haut');
console.log('3. V√©rifier que les styles sont correctement appliqu√©s');
console.log('4. Tester la fonctionnalit√© de recherche');
