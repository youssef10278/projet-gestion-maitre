/**
 * Script de migration pour ajouter les tables des devis (quotes)
 */

const Database = require('better-sqlite3');
const path = require('path');

// Chemin vers la base de donn√©es
const dbPath = path.join(__dirname, 'database', 'main.db');

console.log('üöÄ D√©marrage de la migration pour les devis...');
console.log('üìÅ Chemin de la base de donn√©es:', dbPath);

try {
    // Ouvrir la base de donn√©es
    const db = new Database(dbPath);
    
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie');
    
    // V√©rifier si les tables existent d√©j√†
    const tablesExist = db.prepare(`
        SELECT name FROM sqlite_master 
        WHERE type='table' AND name IN ('quotes', 'quote_items')
    `).all();
    
    if (tablesExist.length > 0) {
        console.log('‚ö†Ô∏è Tables des devis d√©j√† pr√©sentes:', tablesExist.map(t => t.name));
        console.log('üîÑ Suppression des tables existantes pour recr√©ation...');
        
        db.exec('DROP TABLE IF EXISTS quote_items');
        db.exec('DROP TABLE IF EXISTS quotes');
        console.log('‚úÖ Tables supprim√©es');
    }
    
    // Migration 1: Cr√©er la table quotes (devis)
    console.log('‚ûï Cr√©ation de la table quotes...');
    db.exec(`
        CREATE TABLE IF NOT EXISTS quotes (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            number TEXT NOT NULL UNIQUE,
            client_id INTEGER,
            client_name TEXT NOT NULL,
            client_phone TEXT,
            client_address TEXT,
            date_created TEXT NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime')),
            date_validity TEXT NOT NULL,
            validity_days INTEGER NOT NULL DEFAULT 30,
            status TEXT NOT NULL DEFAULT 'draft' CHECK(status IN ('draft', 'sent', 'accepted', 'rejected', 'expired', 'converted')),
            subtotal REAL NOT NULL DEFAULT 0,
            discount_type TEXT CHECK(discount_type IN ('percentage', 'amount')),
            discount_value REAL DEFAULT 0,
            discount_amount REAL DEFAULT 0,
            total_amount REAL NOT NULL,
            notes TEXT,
            conditions TEXT,
            created_by TEXT NOT NULL DEFAULT 'system',
            converted_sale_id INTEGER,
            created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime')),
            updated_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime'))
        )
    `);
    console.log('‚úÖ Table quotes cr√©√©e');
    
    // Migration 2: Cr√©er la table quote_items (articles des devis)
    console.log('‚ûï Cr√©ation de la table quote_items...');
    db.exec(`
        CREATE TABLE IF NOT EXISTS quote_items (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            quote_id INTEGER NOT NULL,
            product_id INTEGER,
            product_name TEXT NOT NULL,
            product_reference TEXT,
            quantity INTEGER NOT NULL,
            unit_price REAL NOT NULL,
            line_total REAL NOT NULL,
            discount_type TEXT CHECK(discount_type IN ('percentage', 'amount')),
            discount_value REAL DEFAULT 0,
            discount_amount REAL DEFAULT 0,
            final_price REAL NOT NULL,
            notes TEXT,
            created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M:%S', 'now', 'localtime')),
            FOREIGN KEY (quote_id) REFERENCES quotes(id) ON DELETE CASCADE
        )
    `);
    console.log('‚úÖ Table quote_items cr√©√©e');
    
    // Migration 3: Cr√©er des index pour optimiser les performances
    console.log('‚ûï Cr√©ation des index...');
    db.exec(`
        CREATE INDEX IF NOT EXISTS idx_quotes_number ON quotes(number);
        CREATE INDEX IF NOT EXISTS idx_quotes_client_id ON quotes(client_id);
        CREATE INDEX IF NOT EXISTS idx_quotes_status ON quotes(status);
        CREATE INDEX IF NOT EXISTS idx_quotes_date_created ON quotes(date_created);
        CREATE INDEX IF NOT EXISTS idx_quotes_date_validity ON quotes(date_validity);
        CREATE INDEX IF NOT EXISTS idx_quote_items_quote_id ON quote_items(quote_id);
        CREATE INDEX IF NOT EXISTS idx_quote_items_product_id ON quote_items(product_id);
    `);
    console.log('‚úÖ Index cr√©√©s');
    
    // Migration 4: Ins√©rer un devis de test
    console.log('‚ûï Insertion de donn√©es de test...');
    
    // Cr√©er un devis de test
    const testQuoteNumber = 'DEV-' + new Date().toISOString().slice(0, 10).replace(/-/g, '') + '-0001';
    const validityDate = new Date();
    validityDate.setDate(validityDate.getDate() + 30);
    
    const quoteResult = db.prepare(`
        INSERT INTO quotes (
            number, client_name, client_phone, 
            date_validity, validity_days, status, subtotal, 
            total_amount, notes, created_by
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).run(
        testQuoteNumber,
        'Client Test Devis',
        '0123456789',
        validityDate.toISOString(),
        30,
        'draft',
        100.00,
        100.00,
        'Devis de test cr√©√© lors de la migration',
        'system'
    );
    
    // Ajouter un article de test
    db.prepare(`
        INSERT INTO quote_items (
            quote_id, product_name, quantity, unit_price, line_total, final_price
        ) VALUES (?, ?, ?, ?, ?, ?)
    `).run(
        quoteResult.lastInsertRowid,
        'Produit Test',
        2,
        50.00,
        100.00,
        100.00
    );
    
    console.log('‚úÖ Devis de test cr√©√©:', testQuoteNumber);
    
    // V√©rification finale
    const quotesCount = db.prepare('SELECT COUNT(*) as count FROM quotes').get().count;
    const quoteItemsCount = db.prepare('SELECT COUNT(*) as count FROM quote_items').get().count;
    
    console.log('üìä V√©rification finale:');
    console.log(`  - Devis cr√©√©s: ${quotesCount}`);
    console.log(`  - Articles de devis: ${quoteItemsCount}`);
    
    // Fermer la base de donn√©es
    db.close();
    
    console.log('üéâ Migration des devis termin√©e avec succ√®s !');
    console.log('');
    console.log('üìã Tables cr√©√©es:');
    console.log('  ‚úÖ quotes (devis principaux)');
    console.log('  ‚úÖ quote_items (articles des devis)');
    console.log('  ‚úÖ Index d\'optimisation');
    console.log('  ‚úÖ Donn√©es de test');
    console.log('');
    console.log('üöÄ Vous pouvez maintenant d√©velopper l\'interface des devis !');
    
} catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error);
    process.exit(1);
}
