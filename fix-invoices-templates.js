/**
 * Script pour corriger l'int√©gration des templates dans invoices.js
 */

const fs = require('fs');
const path = require('path');

// Fonction pour corriger le fichier invoices.js
function fixInvoicesFile() {
    console.log('üîß Correction du fichier invoices.js...');
    
    const invoicesPath = path.join(__dirname, 'src', 'js', 'invoices.js');
    
    try {
        // Lire le fichier actuel
        let content = fs.readFileSync(invoicesPath, 'utf8');
        
        // Trouver la position de la fin du module principal
        const endModuleIndex = content.indexOf('})();');
        
        if (endModuleIndex === -1) {
            console.error('‚ùå Impossible de trouver la fin du module');
            return false;
        }
        
        // Garder seulement le contenu jusqu'√† la fin du module
        const cleanContent = content.substring(0, endModuleIndex + 5);
        
        console.log(`üìè Contenu original: ${content.length} caract√®res`);
        console.log(`üìè Contenu nettoy√©: ${cleanContent.length} caract√®res`);
        
        // √âcrire le contenu nettoy√©
        fs.writeFileSync(invoicesPath, cleanContent, 'utf8');
        
        console.log('‚úÖ Fichier invoices.js corrig√© avec succ√®s');
        return true;
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la correction:', error.message);
        return false;
    }
}

// Fonction pour ajouter l'int√©gration des templates
function addTemplateIntegration() {
    console.log('üé® Ajout de l\'int√©gration des templates...');
    
    const invoicesPath = path.join(__dirname, 'src', 'js', 'invoices.js');
    
    try {
        let content = fs.readFileSync(invoicesPath, 'utf8');
        
        // Trouver la fonction generatePrintableInvoice
        const functionStart = content.indexOf('async function generatePrintableInvoice()');
        
        if (functionStart === -1) {
            console.error('‚ùå Fonction generatePrintableInvoice non trouv√©e');
            return false;
        }
        
        // Trouver le d√©but de la section style dans cette fonction
        const styleStart = content.indexOf('<style>', functionStart);
        const styleEnd = content.indexOf('</style>', styleStart) + 8;
        
        if (styleStart === -1 || styleEnd === -1) {
            console.error('‚ùå Section style non trouv√©e dans generatePrintableInvoice');
            return false;
        }
        
        // Remplacer la section style par l'appel au template
        const beforeStyle = content.substring(0, styleStart);
        const afterStyle = content.substring(styleEnd);
        
        const newStyleSection = `<style>
        \${templateStyles}
    </style>`;
        
        // Ajouter la r√©cup√©ration des styles de template avant le return
        const returnIndex = beforeStyle.lastIndexOf('return `');
        const beforeReturn = beforeStyle.substring(0, returnIndex);
        const afterReturn = beforeStyle.substring(returnIndex);
        
        const templateCode = `
        // R√©cup√©rer les styles du template personnalis√©
        const templateStyles = await getCurrentTemplateStyles();

        `;
        
        const newContent = beforeReturn + templateCode + afterReturn + newStyleSection + afterStyle;
        
        fs.writeFileSync(invoicesPath, newContent, 'utf8');
        
        console.log('‚úÖ Int√©gration des templates ajout√©e avec succ√®s');
        return true;
        
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'ajout des templates:', error.message);
        return false;
    }
}

// Ex√©cuter les corrections
async function main() {
    console.log('üöÄ === CORRECTION INT√âGRATION TEMPLATES FACTURES ===\n');
    
    // 1. Nettoyer le fichier
    if (!fixInvoicesFile()) {
        console.error('‚ùå √âchec de la correction du fichier');
        return;
    }
    
    console.log('');
    
    // 2. Ajouter l'int√©gration des templates
    if (!addTemplateIntegration()) {
        console.error('‚ùå √âchec de l\'ajout des templates');
        return;
    }
    
    console.log('\nüéâ === CORRECTION TERMIN√âE AVEC SUCC√àS ===');
    console.log('');
    console.log('üìã Prochaines √©tapes:');
    console.log('   1. Tester l\'application: npm start');
    console.log('   2. Aller dans la page Factures');
    console.log('   3. Cr√©er une nouvelle facture');
    console.log('   4. G√©n√©rer le PDF pour voir le template appliqu√©');
    console.log('');
    console.log('üîç Le style de la facture devrait maintenant utiliser le template s√©lectionn√© dans les param√®tres');
}

if (require.main === module) {
    main();
}

module.exports = { fixInvoicesFile, addTemplateIntegration };
